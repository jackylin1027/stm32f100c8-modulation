//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @file 		 modbus_master_task.c
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//  @brief 		 Task Subroutine
//
//**********************************************************************************************************************
//**********************************************************************************************************************
//
// I N C L U D E   F I L E S   /   E X T E R N A L   V A R I A B L E S 
//
//**********************************************************************************************************************
#include "..\drv_src\modbus_master_drv.h" 
#include "modbus_master_glb_vars.h"
//**********************************************************************************************************************
//
// C   P L U S   P L U S   C O M P A T I A B L E   D E F I N I T I O N 
//
//**********************************************************************************************************************
#ifdef __cplusplus
extern "C"
{
#endif
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_sending
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
void modbus_master_register_command(void* cmd, UINT8 len)
{
    memcpy((UINT8*)&gb_modbus_master_buffer[0],(UINT8*)cmd, len );
    gb_modbus_master_polling_id=gb_modbus_master_buffer[MODBUS_MASTER_BYTE_NAME_ADDRESS];
    gb_modbus_master_polling_function=gb_modbus_master_buffer[MODBUS_MASTER_BYTE_NAME_FUNCTION_BYTE];
    gb_modbus_master_ptr=0;
    gb_modbus_master_command_length=len;
    MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_SENDING);  
    MODBUS_MASTER_START_TX_API();
}
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_sending
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
UINT8 modbus_master_sending()
{
    if (MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_SENDING)
    {
        if (MODBUS_MASTER_MODE==MODBUS_MASTER_RTU_MODE)
        {
            if (gb_modbus_master_ptr!=gb_modbus_master_command_length )
            {
                MODBUS_MASTER_SEND_OUT_API(gb_modbus_master_buffer[gb_modbus_master_ptr++]);
                MODBUS_MASTER_BYTE_BETWEEN_TIMER_API();
                return 1;
            }
            if (gb_modbus_master_ptr==gb_modbus_master_command_length)
            {
                MODBUS_MASTER_BYTE_BETWEEN_TIMER_API();              
                MODBUS_MASTER_RESPONSE_TIMER_API();
                MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_RECV_WAITING);
            }
        }
    }
    return 0;
}
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_receiving_and_checking
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
UINT8 error_code;
void modbus_master_receiving_and_checking()
{
    UINT8 byte_value;
      
    MODBUS_MASTER_BYTE_BETWEEN_TIMER_API();
    byte_value=MODBUS_MASTER_RECEIVE_API();
    
    if(MODBUS_MASTER_CHK_STATE()!=MODBUS_MASTER_STATE_RECV_WAITING&&MODBUS_MASTER_CHK_STATE()!=MODBUS_MASTER_STATE_RECIVING_AND_CHECKING)
        return;
    
    //if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_RECIVIE_WAITING)
        //MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_RECIVING_AND_CHECKING);
    
    gb_modbus_master_ptr%=MODBUS_MASTER_MAX_BUFFER_SIZE;
    if (MODBUS_MASTER_MODE==MODBUS_MASTER_RTU_MODE)
        gb_modbus_master_buffer[gb_modbus_master_ptr++]=byte_value;    
    
    switch (gb_modbus_master_ptr-1)
    {
        case MODBUS_MASTER_BYTE_NAME_ADDRESS:
        {
            if (gb_modbus_master_buffer[MODBUS_MASTER_BYTE_NAME_ADDRESS]!=MODBUS_MASTER_ID)
            {
                MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_BACK_TO_STOP);
            }     
            else
            {
                MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_RECIVING_AND_CHECKING);
                //gs_modbus_package_ptr=(STC_MODBUS_SLAVE_COMMAND_INFO*)&gt_modbus_slave_valid_function[MODBUS_SLAVE_BYTE_NAME_ADDRESS];
            } 
            break;
        }
        case MODBUS_MASTER_BYTE_NAME_FUNCTION_BYTE:
        {
            if (byte_value!=gb_modbus_master_polling_function )
            {
                error_code=0x04;
                MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_BACK_TO_STOP);
            } 
            else
            {
                //gs_modbus_slave_package_ptr+=byte_value;
            }   
            break;
        }       
        default:
            break;
    }
        
}
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_response_timeout
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
void modbus_master_response_timeout()
{
     error_code=0x00;
    
    if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_RECIVING_AND_CHECKING)
        return;
    
    if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_RECV_WAITING)
    {
        error_code=0x01;     
        MODBUS_MASTER_SET_STATE(MODBUS_MASTER_STATE_IDEL);
        MODBUS_MASTER_INIT_API();
    }
}
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_byte_between_timeout
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
void modbus_master_byte_between_timeout()
{
    error_code=0x00;
    if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_RECV_WAITING)
    {       
        MODBUS_MASTER_SET_READ_IN_API();            
    }
    if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_SENDING)
        error_code=0x02;  
    if(MODBUS_MASTER_CHK_STATE()==MODBUS_MASTER_STATE_RECIVING_AND_CHECKING)
        error_code=0x03;      
}
//**********************************************************************************************************************
//
// Copyright (C) 2010, FINE-TEK CO.,LTD. Taiwan  All Rights Reserved
//
//! @fn 			 modbus_master_task
//
//! @author 	 Jacky Lin
//
//! @date 		 2022/07/25
//
//! @brief 		 task function
//
//! @param 		 None
//
//! @return 	 None
//
//**********************************************************************************************************************
void modbus_master_task()
{

}
#ifdef __cplusplus
}
#endif

